import{C as r,P as n}from"./index-c0fuZDJO.js";import{B as h}from"./base-event-BLT1_Wdv.js";class o extends h{constructor(e,t,s){super(e,t,s),this.numberSets=[],this.currentSetIndex=0,this.currentInput=""}start(){this.setupEventSpace(),this.generateChallenge(),this.createCodeDisplay(),this.setupKeyboardInput()}setupEventSpace(){const e=this.scene.add.graphics();e.fillStyle(1710618,1),e.fillRect(this.eventArea.x,this.eventArea.y,this.eventArea.width,this.eventArea.height),e.lineStyle(3,parseInt(this.config.color.replace("#","0x")),1),e.strokeRect(this.eventArea.x,this.eventArea.y,this.eventArea.width,this.eventArea.height),this.trackElement(e);const t=this.scene.add.text(this.eventArea.x+this.eventArea.width/2,this.eventArea.y+15,"FIX THE MAGIC NUMBERS!",{...r.TEXT_STYLES.UI_SMALL,color:this.config.color}).setOrigin(.5);this.trackElement(t)}generateChallenge(){const e=n.Math.Between(this.config.minSets,this.config.maxSets);for(let t=0;t<e;t++){const i=Math.random()>.5?n.Math.Between(10,99):n.Math.Between(1,9);this.numberSets.push(i.toString())}}createCodeDisplay(){const e=this.eventArea.x+this.eventArea.width/2,t=this.eventArea.y+60,s=["updateData","processValue","handleEvent","setState"],i=n.Utils.Array.GetRandom(s);this.codeText=this.scene.add.text(e,t,`${i}(${this.numberSets.map(()=>"??").join(", ")})`,{fontSize:"14px",fontFamily:"monospace",color:"#FFFFFF"}).setOrigin(.5),this.trackElement(this.codeText),this.targetDisplay=this.scene.add.text(e,t+30,`Enter: ${this.numberSets[0]}`,{...r.TEXT_STYLES.UI_SMALL,color:this.config.color}).setOrigin(.5),this.trackElement(this.targetDisplay),this.inputDisplay=this.scene.add.text(e,t+50,"_",{fontSize:"16px",fontFamily:"monospace",color:"#00FF00"}).setOrigin(.5),this.trackElement(this.inputDisplay),this.progressText=this.scene.add.text(e,t+70,`0 / ${this.numberSets.length} numbers`,{...r.TEXT_STYLES.MICRO}).setOrigin(.5),this.trackElement(this.progressText)}setupKeyboardInput(){const e=t=>{t.key>="0"&&t.key<="9"?(this.currentInput+=t.key,this.updateInputDisplay(),this.currentSetIndex<this.numberSets.length&&this.currentInput===this.numberSets[this.currentSetIndex]&&this.completeCurrentSet(),this.currentSetIndex<this.numberSets.length&&this.currentInput.length>=this.numberSets[this.currentSetIndex].length&&this.currentInput!==this.numberSets[this.currentSetIndex]&&this.wrongInput()):t.key==="Backspace"&&this.currentInput.length>0&&(this.currentInput=this.currentInput.slice(0,-1),this.updateInputDisplay())};this.scene.input.keyboard.on("keydown",e),this.trackHandler("keydown",e)}updateInputDisplay(){this.inputDisplay.setText(this.currentInput||"_")}completeCurrentSet(){this.scene.tweens.add({targets:this.inputDisplay,scale:[1.5,1],duration:200});const e=[...this.numberSets];for(let t=0;t<=this.currentSetIndex;t++)e[t]=this.numberSets[t];for(let t=this.currentSetIndex+1;t<e.length;t++)e[t]="??";this.codeText.setText(this.codeText.text.split("(")[0]+`(${e.join(", ")})`),this.currentSetIndex++,this.currentInput="",this.currentSetIndex>=this.numberSets.length?(this.scene.events.emit("code:complete"),this.success()):(this.targetDisplay.setText(`Enter: ${this.numberSets[this.currentSetIndex]}`),this.progressText.setText(`${this.currentSetIndex} / ${this.numberSets.length} numbers`),this.updateInputDisplay())}wrongInput(){this.inputDisplay.setColor("#FF0000"),this.scene.tweens.add({targets:this.inputDisplay,x:this.inputDisplay.x+[-5,5,-5,5,0],duration:300,onComplete:()=>{this.inputDisplay.setColor("#00FF00"),this.currentInput="",this.updateInputDisplay()}})}}export{o as CodeChallengeEvent};

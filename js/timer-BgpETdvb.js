class o{constructor(s,i={}){this.scene=s,this.config={duration:i.duration||5e3,showVisual:i.showVisual!==!1,position:i.position||{x:200,y:20},style:i.style||"bar",color:i.color||16711680,backgroundColor:i.backgroundColor||3355443,...i},this.onTimeout=i.onTimeout||(()=>{}),this.onTick=i.onTick||(()=>{}),this.timer=null,this.visual=null,this.startTime=0,this.isRunning=!1}start(){this.startTime=this.scene.time.now,this.isRunning=!0,this.config.showVisual&&this.createVisual();const s=this.config.duration;return s!==Number.MAX_SAFE_INTEGER&&(this.timer=this.scene.time.delayedCall(s,()=>{this.timeout()})),this}createVisual(){const{x:s,y:i}=this.config.position;switch(this.config.style){case"bar":this.createBarVisual(s,i);break;case"circle":this.createCircleVisual(s,i);break;case"text":this.createTextVisual(s,i);break}}createBarVisual(s,i){const e=this.scene.add.rectangle(s,i,100,10,this.config.backgroundColor).setStrokeStyle(1,0),r=this.scene.add.rectangle(s-100/2,i,0,10,this.config.color).setOrigin(0,.5);this.visual={bg:e,progress:r,width:100}}createCircleVisual(s,i){const a=this.scene.add.circle(s,i,20,this.config.backgroundColor).setStrokeStyle(2,0),e=this.scene.add.circle(s,i,18,this.config.color),r=this.scene.add.graphics(),n=new Phaser.Display.Masks.GeometryMask(this.scene,r);e.setMask(n),this.visual={bg:a,progress:e,mask:r,radius:20,x:s,y:i}}createTextVisual(s,i){const t=this.scene.add.text(s,i,this.formatTime(this.config.duration),{fontSize:"16px",fontFamily:'"Press Start 2P"',color:"#FFFFFF",stroke:"#000000",strokeThickness:2}).setOrigin(.5);this.visual={text:t}}update(){if(!this.isRunning||!this.visual)return;const s=this.scene.time.now-this.startTime,i=Math.max(0,this.config.duration-s),t=1-i/this.config.duration;this.updateVisual(t,i),this.onTick(i,t)}updateVisual(s,i){switch(this.config.style){case"bar":this.visual.progress.width=this.visual.width*s;break;case"circle":this.updateCircleProgress(s);break;case"text":i===Number.MAX_SAFE_INTEGER?this.visual.text.setText("âˆž"):this.visual.text.setText(this.formatTime(i));break}}updateCircleProgress(s){const{mask:i,radius:t,x:a,y:e}=this.visual;i.clear(),s>0&&(i.fillStyle(16777215),i.slice(a,e,t,0,s*Math.PI*2,!1),i.fillPath())}formatTime(s){return`${Math.ceil(s/1e3)}s`}pause(){this.timer&&this.isRunning&&(this.timer.paused=!0,this.isRunning=!1)}resume(){this.timer&&!this.isRunning&&(this.timer.paused=!1,this.isRunning=!0)}stop(){this.isRunning=!1,this.timer&&(this.timer.remove(),this.timer=null)}extend(s){this.timer&&(this.timer.delay+=s,this.config.duration+=s)}getTimeRemaining(){if(!this.isRunning)return 0;const s=this.scene.time.now-this.startTime;return Math.max(0,this.config.duration-s)}getProgress(){if(!this.isRunning)return 1;const s=this.scene.time.now-this.startTime;return Math.min(1,s/this.config.duration)}timeout(){this.isRunning=!1,this.onTimeout()}cleanup(){this.stop(),this.visual&&(Object.values(this.visual).forEach(s=>{s&&s.destroy&&s.destroy()}),this.visual=null)}}export{o as T};
